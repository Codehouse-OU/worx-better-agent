buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo1.maven.org/maven2" }
    }
    dependencies {
        classpath "org.openapitools:openapi-generator-gradle-plugin:${openapiGeneratorVersion}"
    }
}

dependencies {
    implementation "io.swagger.core.v3:swagger-annotations:${swaggerAnnotationsVersion}"
    implementation "org.openapitools:jackson-databind-nullable:${jacksonDatabindVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonDatatypeVersion}"
}
task generateServerClient(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    generatorName = "spring"
    library = "spring-cloud"
    inputSpec = file("$projectDir/ext/api/server/openapi.yml").absolutePath
    outputDir = "$buildDir/generated".toString()
    configFile = file("$projectDir/ext/api/server/openapi-conf.json").absolutePath
}
task generateClient(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    generatorName = "spring"
    library = "spring-cloud"
    inputSpec = file("$projectDir/ext/api/worx/openapi.yml").absolutePath
    outputDir = "$buildDir/generated".toString()
    configOptions = [
        "dateLibrary": "java8",
        "hideGenerationTimestamp": "true",
        "apiPackage": "ee.codehouse.worxbetter.landroid.client.api",
        "modelPackage": "ee.codehouse.worxbetter.landroid.client.model",
        "interfaceOnly": "true",
        "serializableModel": "true"
    ]
}
compileJava.dependsOn generateServerClient, generateClient

sourceSets.main.java.srcDir "${buildDir}/generated/src/main/java"
